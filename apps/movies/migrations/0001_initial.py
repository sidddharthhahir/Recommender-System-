# Generated by Django 4.2.7 on 2025-09-17 13:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(unique=True)),
                ('title', models.CharField(max_length=500)),
                ('original_title', models.CharField(blank=True, max_length=500)),
                ('overview', models.TextField(blank=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('runtime', models.IntegerField(blank=True, null=True)),
                ('tmdb_rating', models.FloatField(default=0.0)),
                ('tmdb_vote_count', models.IntegerField(default=0)),
                ('popularity', models.FloatField(default=0.0)),
                ('poster_path', models.CharField(blank=True, max_length=200)),
                ('backdrop_path', models.CharField(blank=True, max_length=200)),
                ('original_language', models.CharField(blank=True, max_length=10)),
                ('adult', models.BooleanField(default=False)),
                ('cast', models.JSONField(blank=True, default=list)),
                ('crew', models.JSONField(blank=True, default=list)),
                ('keywords', models.JSONField(blank=True, default=list)),
                ('production_companies', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('avg_user_rating', models.FloatField(default=0.0)),
                ('total_user_ratings', models.IntegerField(default=0)),
                ('recommendation_score', models.FloatField(default=0.0)),
                ('genres', models.ManyToManyField(blank=True, to='movies.genre')),
            ],
            options={
                'ordering': ['-popularity', '-tmdb_rating'],
            },
        ),
        migrations.CreateModel(
            name='MovieInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('view', 'Viewed Details'), ('click', 'Clicked Poster'), ('search', 'Found via Search'), ('recommendation', 'From Recommendation')], max_length=20)),
                ('source_page', models.CharField(blank=True, max_length=100)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Watchlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlisted_by', to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-added_at'],
                'unique_together': {('user', 'movie')},
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 - Terrible'), (2, '2 - Bad'), (3, '3 - Okay'), (4, '4 - Good'), (5, '5 - Excellent')])),
                ('review', models.TextField(blank=True)),
                ('would_recommend', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'movie')},
            },
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['tmdb_id'], name='movies_movi_tmdb_id_0e4cad_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['release_date'], name='movies_movi_release_b7ac7d_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['tmdb_rating'], name='movies_movi_tmdb_ra_1bfea9_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['popularity'], name='movies_movi_popular_114287_idx'),
        ),
    ]
