# Generated by Django 4.2.7 on 2025-09-17 13:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('movies', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ModelVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_name', models.CharField(max_length=50, unique=True)),
                ('algorithm', models.CharField(max_length=50)),
                ('training_data_size', models.IntegerField()),
                ('training_duration_minutes', models.FloatField()),
                ('hyperparameters', models.JSONField()),
                ('precision_at_10', models.FloatField(blank=True, null=True)),
                ('recall_at_10', models.FloatField(blank=True, null=True)),
                ('auc_score', models.FloatField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('model_file_path', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecommendationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
                ('confidence_score', models.FloatField()),
                ('clicked', models.BooleanField(default=False)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('rated', models.BooleanField(default=False)),
                ('rated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='UserEmbedding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('embedding_vector', models.JSONField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('model_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommender.modelversion')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='embedding', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SurveyResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favorite_genres', models.JSONField()),
                ('favorite_actor', models.CharField(blank=True, max_length=200)),
                ('last_loved_movie', models.CharField(blank=True, max_length=200)),
                ('rating_style', models.CharField(blank=True, max_length=50)),
                ('openness_to_new', models.IntegerField()),
                ('seed_ratings_generated', models.BooleanField(default=False)),
                ('seed_ratings_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='survey_response', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecommendationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type', models.CharField(default='homepage', max_length=50)),
                ('algorithm_version', models.CharField(default='lightfm_v1', max_length=20)),
                ('total_movies', models.IntegerField(default=0)),
                ('avg_confidence', models.FloatField(default=0.0)),
                ('processing_time_ms', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('movies', models.ManyToManyField(through='recommender.RecommendationItem', to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendation_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='recommendationitem',
            name='log',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommender.recommendationlog'),
        ),
        migrations.AddField(
            model_name='recommendationitem',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie'),
        ),
        migrations.CreateModel(
            name='MovieEmbedding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('embedding_vector', models.JSONField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('model_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommender.modelversion')),
                ('movie', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='embedding', to='movies.movie')),
            ],
        ),
        migrations.CreateModel(
            name='ExplanationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('explanation_type', models.CharField(choices=[('shap', 'SHAP Global'), ('lime', 'LIME Local'), ('anchor', 'Anchor Rules'), ('counterfactual', 'Counterfactual'), ('combined', 'Combined View')], max_length=20)),
                ('explanation_data', models.JSONField()),
                ('viewed', models.BooleanField(default=True)),
                ('clicked_details', models.BooleanField(default=False)),
                ('helpful_rating', models.IntegerField(blank=True, null=True)),
                ('generation_time_ms', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='explanation_logs', to='movies.movie')),
                ('recommendation_log', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='recommender.recommendationlog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='explanation_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='recommendationitem',
            unique_together={('log', 'movie')},
        ),
    ]
